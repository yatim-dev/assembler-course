.global _start
.text
_start:

mov $1, %r9 #состояние
mov $str, %rsi
xor %rax, %rax

lp:

lodsb # -> mov (rsi), al;  inc rsi  перебираем символы

or %al, %al
je end
mov tab(%rax), %al

xchg %rax, %r9
mov $len, %rbx
mul %rbx
xchg %rax, %r9
mov tr_tab(%r9, %rax, 2), %r9w
jmp lp

end:
mov %r9, %rdi
mov $60, %rax
syscall

.data
str:
.asciz "asm"    #asm\0

tr_tab:
    # 0  a  s  m
.word 0, 0, 0, 0    # ошибки
len=.-tr_tab        # 8
.word 0, 2, 0, 0    # 1 состояние
.word 0, 0, 3, 0    # 2 состояние
.word 0, 0, 0, 4    # 3 состояние
.word 0, 0, 0, 0    # 


tab:
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0
.byte 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
